{'image': 'https://tryhackme-images.s3.amazonaws.com/room-icons/46f437a95b1de43238c290a9c416c8d4.png', 'title': 'Kenobi', 'description': 'Walkthrough on exploiting a Linux machine. Enumerate Samba for shares, manipulate a vulnerable version of proftpd and escalate your privileges with path variable manipulation. ', 'code': 'kenobi', 'users': 117776, 'tags': ['samba', 'path var manipulation', 'suid', 'smb'], 'type': 'walkthrough', 'difficulty': 'easy', 'userCompleted': False, 'upVotes': 4724, 'created': '2019-09-04T14:28:15.392Z', 'published': '2020-04-25T10:37:40.468Z', 'freeToUse': True, 'businessOnly': False, 'headerImage': 'https://i.imgur.com/zWNY3JF.png', 'creator': 'tryhackme', 'tasks': [{'taskTitle': 'Deploy the vulnerable machine', 'taskDesc': '<p style="text-align:center;"><img src="https://i.imgur.com/OcA2KrK.gif" style="width:177px;height:177px;" /></p><p style="text-align:center;">This room will cover accessing a Samba share, manipulating a vulnerable version of proftpd to gain initial access and escalate your privileges to root via an SUID binary.</p>', 'taskType': 'vm', 'taskNo': 1, 'taskCreated': '2019-09-04T15:39:27.905Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '5d6fd2f689f67e1b3cca2715', 'questions': [{'questionNo': 1, 'question': "<p>Make sure you're connected to our network and deploy the machine</p>", 'hint': ''}, {'questionNo': 2, 'question': '<p>Scan the machine with nmap, how many ports are open?</p>', 'hint': 'nmap ip -vvv'}]}, {'taskTitle': 'Enumerating Samba for shares', 'taskDesc': '<p style="text-align:center"><img src="https://i.imgur.com/O8S93Kr.png" style="width:418px;height:74.811px" /></p><p style="text-align:center">Samba is the standard Windows interoperability suite of programs for Linux and Unix. It allows end users to access and use files, printers and other commonly shared resources on a companies intranet or internet. Its often referred to as a network file system.</p><p style="text-align:center">Samba is based on the common client/server protocol of Server Message Block (SMB). SMB is developed only for Windows, without Samba, other computer platforms would be isolated from Windows machines, even if they were part of the same network.</p>', 'taskType': 'none', 'taskNo': 2, 'taskCreated': '2019-09-04T15:49:10.654Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<p>Using nmap we can enumerate a machine for SMB shares.</p><p>Nmap has the ability to run to automate a wide variety of networking tasks. There is a script to enumerate shares!</p><p><span style="color:rgb(206, 0, 0)">nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse MACHINE_IP</span></p><p>SMB has two ports, 445 and 139.</p><p><img src="https://i.imgur.com/bkgVNy3.png" style="width:457px;height:201.336px" /></p><p>Using the nmap command above, how many shares have been found?</p>', 'hint': ''}, {'questionNo': 2, 'question': '<p>On most distributions of Linux smbclient is already installed. Lets inspect one of the shares.</p><p><span style="color:rgb(206, 0, 0)">smbclient //</span><span style="color:rgb(206, 0, 0)">MACHINE_IP</span><span style="color:rgb(206, 0, 0)">/anonymous</span></p><p>Using your machine, connect to the machines network share.</p><p><img src="https://i.imgur.com/B1FXBt8.png" style="width:516px" /></p><p>Once you\'re connected, list the files on the share. What is the file can you see?</p>', 'hint': ''}, {'questionNo': 3, 'question': '<p>You can recursively download the SMB share too. Submit the username and password as nothing.</p><p><span style="color:rgb(206, 0, 0)">smbget -R smb://</span><span style="color:rgb(206, 0, 0)">MACHINE_IP</span><span style="color:rgb(206, 0, 0)">/anonymous</span></p><p>Open the file on the share. There is a few interesting things found.</p><ul><li>Information generated for Kenobi\xa0when generating an SSH key for the user</li><li>Information about the ProFTPD server.</li></ul><p>What port is FTP running on?</p>', 'hint': ''}, {'questionNo': 4, 'question': '<p>Your earlier nmap port scan will have shown port 111 running the service rpcbind. This is just a server that converts remote procedure call (RPC) program number into universal addresses. When an RPC service is started, it tells rpcbind the address at which it is listening and the RPC program number its prepared to serve.\xa0</p><p>In our case, port 111 is access to a network file system. Lets use nmap to enumerate this.</p><p><span style="color:rgb(206, 0, 0)">nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount MACHINE_IP</span></p><p>What mount can we see?</p>', 'hint': ''}]}, {'taskTitle': 'Gain initial access with ProFtpd', 'taskDesc': '<p style="text-align:center"><img src="https://i.imgur.com/L54MBzX.png" style="box-sizing:border-box;vertical-align:middle;border-style:none;color:rgb(0, 0, 0);font-family:&quot;ubuntu mono&quot;, monospace;font-size:16px;font-style:normal;font-variant-ligatures:normal;font-variant-caps:normal;font-weight:400;letter-spacing:normal;orphans:2;text-align:left;text-indent:0px;text-transform:none;white-space:normal;widows:2;word-spacing:0px;-webkit-text-stroke-width:0px;background-color:rgb(255, 255, 255);text-decoration-style:initial;text-decoration-color:initial;width:276.472px;height:146.094px" /></p><p style="text-align:center">ProFtpd is a free and open-source FTP server, compatible with Unix and Windows systems. Its also been vulnerable in the past software versions.</p>', 'taskType': 'none', 'taskNo': 3, 'taskCreated': '2019-09-04T15:51:13.533Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<p>Lets get the version of ProFtpd. Use netcat to connect to the machine on the FTP port.</p><p>What is the version?</p>', 'hint': 'nc machines_ip 21'}, {'questionNo': 2, 'question': '<p>We can use searchsploit to find exploits for a particular software version.</p><p>Searchsploit is basically just a command line search tool for exploit-db.com.</p><p>How many exploits are there for the ProFTPd running?</p>', 'hint': 'searchsploit proftpd version'}, {'questionNo': 3, 'question': '<p>You should have found an exploit from ProFtpd\'s <a href="http://www.proftpd.org/docs/contrib/mod_copy.html">mod_copy module</a>.\xa0</p><p>The mod_copy module implements <b>SITE CPFR</b> and <b>SITE CPTO</b> commands, which can be used to copy files/directories from one place to another on the server.\xa0Any unauthenticated client can leverage these commands to copy files from any\xa0<span style="font-size:1rem">part of the filesystem to a chosen destination.</span></p><p>We know that the FTP service is running as the Kenobi user (from the file on the share) and an ssh key is generated for that user.\xa0</p>', 'hint': ''}, {'questionNo': 4, 'question': '<p>We\'re now going to copy\xa0<span style="font-size:1rem">Kenobi\'s private key using SITE CPFR and SITE CPTO commands.</span></p><p><img src="https://i.imgur.com/LajBhh2.png" style="width:543.756px;height:84.8906px" /><span style="font-size:1rem"><br /></span></p><p><span style="font-size:1rem">We knew that the /var directory was a mount we could see (task 2, question 4). So we\'ve now moved Kenobi\'s private key to the /var/tmp directory.</span></p>', 'hint': ''}, {'questionNo': 5, 'question': '<p>Lets mount the /var/tmp directory to our machine</p><p><span style="color:rgb(206, 0, 0)">mkdir /mnt/kenobiNFS<br />mount MACHINE_IP:/var /mnt/kenobiNFS<br />ls -la /mnt/kenobiNFS</span></p><p><img src="https://i.imgur.com/v8Ln4fu.png" style="width:495px;height:302.063px" /></p><p>We now have a network mount on our deployed machine! We can go to /var/tmp and get the private key then login to Kenobi\'s account.</p><p><img src="https://i.imgur.com/Vy4KkEl.png" style="width:493px" /></p><p>What is Kenobi\'s user flag (/home/kenobi/user.txt)?</p>', 'hint': ''}]}, {'taskTitle': 'Privilege Escalation with Path Variable Manipulation', 'taskDesc': '<p style="text-align:center;"></p><p style="text-align:center;"><img src="https://i.imgur.com/LN2uOCJ.png" style="width:392px;" /><br /></p><p style="text-align:center;">Lets first understand what what SUID, SGID and Sticky Bits are.</p><table class="table table-bordered"><tbody><tr><td><b>Permission</b></td><td><b>On Files</b></td><td><b>On Directories</b></td></tr><tr><td>SUID Bit</td><td>User executes the file with permissions of the <i>file</i> owner</td><td>-</td></tr><tr><td>SGID Bit</td><td>User executes the file with the permission of the <i>group</i> owner.<br /></td><td>File created in directory gets the same group owner.</td></tr><tr><td>Sticky Bit</td><td>No meaning</td><td>Users are prevented from deleting files from other users.</td></tr></tbody></table>', 'taskType': 'none', 'taskNo': 4, 'taskCreated': '2019-09-04T15:54:59.279Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<p>SUID bits can be dangerous, some binaries such as passwd need to be run with elevated privileges (as its resetting your password on the system), however other custom files could that have the SUID bit can lead to all sorts of issues.</p><p>To search the a system for these type of files run the following: <span style="color:rgb(206, 0, 0);">find / -perm -u=s -type f 2&gt;/dev/null</span></p><p><span style="color:rgb(0, 0, 0);">What file looks particularly out of the ordinary?\xa0</span></p>', 'hint': ''}, {'questionNo': 2, 'question': '<p>Run the binary, how many options appear?</p>', 'hint': ''}, {'questionNo': 3, 'question': '<p>Strings is a command on Linux that looks for human readable strings on a binary.</p><p><img src="https://i.imgur.com/toHFALv.png" style="width:177px;" /></p><p>This shows us the binary is running without a full path (e.g. not using /usr/bin/curl or /usr/bin/uname).</p><p>As this file runs as the root users privileges, we can manipulate our path gain a root shell.</p><p><img src="https://i.imgur.com/OfMkDhW.png" style="width:442px;" /></p><p>We copied the /bin/sh shell, called it curl, gave it the correct permissions and then put its location in our path. This meant that when the /usr/bin/menu binary was run, its using our path variable to find the "curl" binary.. Which is actually a version of /usr/sh, as well as this file being run as root it runs our shell as root!</p>', 'hint': ''}, {'questionNo': 4, 'question': '<p>What is the root flag (/root/root.txt)?</p>', 'hint': ''}]}]}