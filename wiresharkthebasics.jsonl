{'image': 'https://tryhackme-images.s3.amazonaws.com/room-icons/f5ce8576617e4dc603538590f9d804da.png', 'title': 'Wireshark: The Basics', 'description': 'Learn the basics of Wireshark and how to analyse protocols and PCAPs.', 'code': 'wiresharkthebasics', 'users': 47552, 'tags': ['PCAP Analysis', 'Forensics', 'Wireshark', 'Threat Hunting', 'DFIR', 'Security', 'Blue Team', 'Incident Response', 'Networking'], 'type': 'walkthrough', 'difficulty': 'easy', 'userCompleted': False, 'upVotes': 1406, 'created': '2022-05-11T14:45:51.588Z', 'published': '2022-07-05T18:50:57.778Z', 'freeToUse': True, 'businessOnly': False, 'headerImage': 'https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/10f7d168ab59410ddc28a4b1e89fd6d4.png', 'creator': 'ujohn', 'tasks': [{'taskTitle': 'Introduction', 'taskDesc': '<p style="text-align:justify"><span style="font-size:1rem">Wireshark is an open-source, cross-platform network packet analyser tool capable of sniffing and investigating live traffic and inspecting packet captures (PCAP). It is commonly\xa0</span><span style="text-align:justify;font-size:1rem">used as one of the best packet analysis tools. In this room, we will look at the basics of Wireshark and use it to perform fundamental packet analysis.</span><br /></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);text-align:justify;background:transparent;margin-top:0pt;margin-bottom:0pt"><b>Note:</b>\xa0</span><span style="font-size:1rem;color:rgb(14, 16, 26);text-align:justify">A\xa0</span><a class="txbLwp8x glossary-term">VM</a><span style="font-size:1rem;color:rgb(14, 16, 26);text-align:justify">\xa0is attached to this room. You don\'t need SSH or RDP; the room provides a "Split View" feature.\xa0</span><span style="background:transparent;font-size:1rem;color:rgb(14, 16, 26);text-align:justify;margin-top:0pt;margin-bottom:0pt">We suggest completing the </span><a target="_blank" href="https://tryhackme.com/module/network-fundamentals" class="editor-rtfLink"><span style="font-weight:bolder">Network Fundamentals</span></a><span style="background:transparent;font-size:1rem;color:rgb(14, 16, 26);text-align:justify;margin-top:0pt;margin-bottom:0pt">\xa0module before starting working in this room.\xa0</span></p><p style="text-align:justify"><span style="background-color:transparent;color:rgb(14, 16, 26);font-size:1rem;text-align:justify">There are two capture files given in the VM. You can use the "http1.pcapng" file to simulate the actions shown in the screenshots. Please note that you need to use the "Exercise.pcapng" file to answer the questions.</span></p>', 'taskType': 'vm', 'taskNo': 1, 'taskCreated': '2020-10-02T02:20:31.178Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '62b3750d0ca4fa0049ee3130', 'questions': [{'questionNo': 1, 'question': '<div><span style="font-size:1rem">Which file is used to <b>simulate</b> the screenshots?</span><br /></div>', 'hint': ''}, {'questionNo': 2, 'question': '<p>Which file is used to <b>answer</b> the questions?</p>', 'hint': ''}]}, {'taskTitle': 'Tool Overview', 'taskDesc': '<p style="text-align:justify"><span>\ufeff</span><span style="font-size:1rem;text-align:left"><b><span style="font-size:24px">Use Cases</span></b><br /></span></p><p style="text-align:left">Wireshark is one of the most potent traffic analyser tools available in the wild. There are multiple purposes for its use:<br /></p><ul><li style="text-align:left">Detecting and troubleshooting network problems, such as network load failure points and congestion.</li><li style="text-align:left">Detecting security anomalies, such as rogue hosts, abnormal port usage, and suspicious traffic.</li><li style="text-align:left">Investigating and learning protocol details, such as response codes and payload data.\xa0</li></ul><p style="text-align:justify"><span style="font-weight:bolder;background:transparent;color:rgb(14, 16, 26);margin-top:0pt;margin-bottom:0pt">Note:</span><span style="background:transparent;color:rgb(14, 16, 26);margin-top:0pt;margin-bottom:0pt">\xa0Wireshark is not an Intrusion Detection System (IDS). It only allows analysts to discover and investigate the packets in depth. It also doesn\'t modify packets; it reads them. Hence, detecting any anomaly or network problem highly relies on the analyst\'s knowledge and investigation skills.<br /></span></p><p style="text-align:justify"><b><span style="font-size:24px">GUI and Data</span></b><br /></p><p style="text-align:justify">Wireshark GUI opens with a single all-in-one page, which helps users investigate the traffic in multiple ways. At first glance, five sections stand out.</p><table class="table table-bordered"><tbody><tr><td style="text-align:center"><b>Toolbar</b></td><td style="text-align:left"><span style="text-align:justify">The main toolbar contains multiple menus and shortcuts for packet sniffing and processing, including filtering, sorting, summarising, exporting and merging.\xa0</span><br /></td></tr><tr><td style="text-align:center"><b>Display Filter Bar</b></td><td style="text-align:left">The main query and filtering section.</td></tr><tr><td style="text-align:center"><b>Recent Files</b></td><td style="text-align:left">List of the recently investigated files. You can recall listed files with a double-click.\xa0</td></tr><tr><td style="text-align:center"><b>Capture Filter and Interfaces</b></td><td style="text-align:left">Capture filters and available sniffing points (network interfaces).\xa0 The network interface is the connection point between a computer and a network. The software connection (e.g., lo, eth0 and ens33) enables networking hardware.</td></tr><tr><td style="text-align:center"><b>Status Bar</b></td><td style="text-align:left">Tool status, profile and numeric packet information.</td></tr></tbody></table><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"><br />The below picture shows Wireshark\'s main window. The sections explained in the table are highlighted. Now open the Wireshark and go through the walkthrough.</span></p>\n\n<p></p>\n<p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/0a96b128d88d49f28e4b537b63bcfd3b.png" alt="Wireshark - GUI" /><br /></p>\n<p></p>\n\n<p style="text-align:justify"><br /><span style="font-size:24px"><b>Loading PCAP Files</b></span><br /></p><p style="text-align:justify">The above picture shows Wireshark\'s empty interface. The only available information is the recently processed\xa0 "http1.cap" file. Let\'s load that file and see Wireshark\'s detailed packet presentation. Note that you can also use the <b>"File"</b> menu, dragging and dropping the file, or double-clicking on the file to load a pcap.<br /></p>\n\n<p></p>\n<p><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/409e59f9a93d6a027b0041b968aae7a4.png" alt="Wireshark - load pcaps" /><br /></p>\n<p></p>\n\n\n<p>Now, we can see the processed filename, detailed number of packets and packet details. Packet details are shown in three different panes, which allow us to discover them in different formats.\xa0</p><table class="table table-bordered"><tbody><tr><td style="text-align:center"><span style="font-weight:bolder;color:rgb(14, 16, 26);text-align:left;background:transparent;margin-top:0pt;margin-bottom:0pt">Packet List Pane</span><br /></td><td style="text-align:left"><span style="color:rgb(14, 16, 26)">Summary of each packet (source and destination addresses, protocol, and packet info). You can click on the list to choose a packet for further investigation. Once you select a packet, the details will appear in the other panels.</span><br /></td></tr><tr><td style="text-align:center"><span style="font-weight:bolder;color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">Packet Details Pane</span><br /></td><td style="text-align:left"><span style="color:rgb(14, 16, 26)">Detailed protocol breakdown of the selected packet.</span><br /></td></tr><tr><td style="text-align:center"><span style="font-weight:bolder;color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">Packet Bytes Pane</span><br /></td><td style="text-align:left"><span style="color:rgb(14, 16, 26)">Hex and decoded ASCII representation of the selected packet. It highlights the packet field depending on the clicked section in the details pane.\xa0</span><br /></td></tr></tbody></table><p style="text-align:justify;background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><br /></p><p style="text-align:justify"><span style="font-size:24px"><span style="font-weight:bolder">Colouring Packets</span></span><br /></p><p style="text-align:justify;background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><span style="background-color:transparent;font-size:1rem">Along with quick packet information, Wireshark also colour packets in order of different conditions and the protocol to spot anomalies and protocols in captures quickly (this explains why almost everything is green in the given screenshots). This glance at packet information can help track down exactly what you\'re looking for during analysis. You can create custom colour rules to spot events of interest by using display filters, and we will cover them in the next room. Now let\'s focus on the defaults and understand how to view and use the represented data details.</span></p><p style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><br /></p><p style="text-align:justify;color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc">Wireshark has two types of packet colouring methods: temporary rules that are only available during a program session and permanent rules that are saved under the preference file (profile) and available for the next program session. You can use the\xa0<span style="text-align:justify;font-size:1rem">"right-click menu" or\xa0</span><span style="background-color:transparent;color:rgb(33, 37, 41);font-size:1rem;font-weight:bolder;text-align:justify">"View --&gt; Coloring Rules"</span><span style="background-color:transparent;color:rgb(33, 37, 41);font-size:1rem;text-align:justify">\xa0menu to</span><span style="background-color:transparent;font-size:1rem">\xa0create permanent colouring rules.\xa0</span><span style="background-color:transparent;color:rgb(33, 37, 41);font-size:1rem">The\xa0</span><span style="background-color:transparent;color:rgb(33, 37, 41);font-size:1rem;font-weight:bolder">"Colourise Packet List"</span><span style="background-color:transparent;color:rgb(33, 37, 41);font-size:1rem">\xa0menu activates/deactivates the colouring rules.\xa0</span><span style="background-color:transparent;font-size:1rem">Temporary packet colouring is done with the\xa0</span><span style="background-color:transparent;font-size:1rem">"right-click menu"</span><span style="background-color:transparent;font-size:1rem">\xa0</span><span style="background-color:transparent;font-size:1rem">or\xa0</span><span style="background-color:transparent;font-size:1rem;color:rgb(33, 37, 41);font-weight:bolder">"View --&gt; Conversation Filter"</span><span style="background-color:transparent;font-size:1rem;color:rgb(33, 37, 41)">\xa0menu,</span><span style="background-color:transparent;font-size:1rem">\xa0which is covered in TASK-5.</span></p><p style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><br /></p><p style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc">The default permanent colouring is shown below.</p><p style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><br /></p><p style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/782c1d38f4502636cb2a8228e7675c9f.png" alt="Wireshark - packet colours" /><br /></p><p style="text-align:justify;color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><br /></p><p style="text-align:justify"><span style="font-size:18px"><span style="font-weight:bolder;font-size:24px">Traffic Sniffing</span></span><br /></p><p style="text-align:justify">You can use the blue <b>"shark button"</b> to start network sniffing (capturing traffic), the red button will stop the sniffing, and the green button will restart the sniffing process. The status bar will also provide the used sniffing interface and the number of collected packets.<br /></p><p style="text-align:justify;color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><br /></p><p style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/a9ccd9cd2acd72480a4674ca576a4a51.png" alt="Wireshark - traffic sniffing" /><br /></p><p style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt;list-style-type:disc"><br /></p><p style="text-align:justify"><span style="font-size:18px"><span style="font-weight:bolder;font-size:24px">Merge PCAP Files</span></span><br /></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">Wireshark can combine two pcap files into one single file. You can use the\xa0</span><strong>"File --&gt; Merge"</strong><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">\xa0menu path to merge a pcap with the processed one. When you choose the second file, Wireshark will show the total number of packets in the selected file. Once you click "open", it will merge the existing pcap file with the chosen one and create a new pcap file. Note that you need to save the "merged" pcap file before working on it.</span><br /></p>\n\n<p></p>\n<details>\n <summary><b>See image</b></summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/bbc3f7938f8d3086953d5b0342422019.png" alt="Wireshark - merge pcaps" />\n<br /></div>\n</details>\n<p></p>\n\n\n<p style="text-align:justify"><span style="font-size:18px"><span style="font-weight:bolder;font-size:24px">View File Details</span></span><br /></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">Knowing the file details is helpful. Especially when working with multiple pcap files, sometimes you will need to know and recall the file details (File hash, capture time, capture file comments, interface and statistics) to identify the file, classify and prioritise it. You can view the details by following "</span><strong>Statistics --&gt; Capture File Properties"</strong><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">\xa0or by clicking the</span><strong>\xa0"pcap icon located on the left bottom"</strong><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">\xa0of the window.</span></p>\n\n<p></p>\n<details>\n <summary><b>See image</b></summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/1ccc88dc2b66e935f2f382387ce3c0ec.png" alt="Wireshark - file details " />\n<br /></div>\n</details>\n<p></p>\n<p></p>\n\n', 'taskType': 'none', 'taskNo': 2, 'taskCreated': '2020-10-02T02:42:24.303Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<div><span style="font-size:18px;font-weight:700">Use the "Exercise.pcapng" file to answer the questions.</span><br /></div><div><span style="font-size:1rem"><b><br /></b></span></div><div><span style="font-size:1rem">Read the <b>"capture file comments"</b>. What is the flag?</span><br /></div>', 'hint': ''}, {'questionNo': 2, 'question': '<p>What is the total number of packets?</p>', 'hint': ''}, {'questionNo': 3, 'question': '<p>What is the <b>SHA256 hash</b> value of the capture file?</p>', 'hint': 'File details can help.'}]}, {'taskTitle': 'Packet Dissection', 'taskDesc': '<p style="text-align:justify"><b><span style="font-size:24px">Packet Dissection</span></b></p><p style="text-align:justify">Packet dissection is also known as protocol dissection, which investigates packet details by decoding available protocols and fields. Wireshark supports a long list of protocols for dissection, and you can also write your dissection scripts. You can find more details on dissection <a href="https://github.com/boundary/wireshark/blob/master/doc/README.dissector" target="_blank"><b>here</b></a>.</p><p style="text-align:justify"><b>Note:\xa0</b><span style="font-size:1rem">This section covers how Wireshark uses OSI layers to break down packets and how to use these layers for analysis.\xa0</span><span style="text-align:left">It is expected that you already have background knowledge of the OSI model and how it works.\xa0</span></p><p><span style="font-size:24px"><b>Packet Details</b></span></p><p style="text-align:justify">You can click on a packet in the packet list pane to open its details (double-click will open details in a new window). Packets consist of 5 to 7 layers based on the OSI model. We will go over all of them in an HTTP packet from a sample capture. The picture below shows viewing packet number 27.</p><p style="text-align:center"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/a09f80da3fd63b32e47842d93ead7db5.png" alt="Wireshark - packet details" /></p><p style="text-align:justify">Each time you click a detail, it will highlight the corresponding part in the packet bytes pane.</p><p style="text-align:center"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/31f45c8e0e06d874d3826752839270df.png" alt="Wireshark - packet bytes" /><br /></p><p style="text-align:justify"><span style="font-size:1rem">Let\'s have a closer view of the details pane.</span><br /></p><p style="text-align:center"></p><p style="text-align:center"></p><p style="text-align:center"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/22a21052465fedc91fc4d1ec3beb6bd6.png" alt="Wireshark - packet details" /><br /></p><p style="text-align:justify">We can see seven distinct layers to the packet: frame/packet, source [MAC], source [IP], protocol, protocol errors, application protocol, and application data. Below we will go over the layers in more detail.</p><p style="text-align:left"><b>The Frame (Layer 1):</b> This will show you what frame/packet you are looking at and details specific to the Physical layer of the OSI model.</p>\n\n\n<details>\n <summary>See image</summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/9d23e2081fa68e7d6f602aa8b0d316d9.png" alt="Wireshark - layer 1" />\n<br /></div>\n</details>\n<p></p><p><br />\n\n\n</p><p style="text-align:left"><b>Source [MAC] (Layer 2):</b> This will show you the source and destination MAC Addresses; from the Data Link layer of the OSI model.</p>\n\n\n<details>\n <summary>See image</summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/cd06b372ae6338348ff521afb4c7243f.png" alt="Wireshark - layer 2" />\n<br /></div>\n</details>\n<p></p><p><br />\n\n\n</p><p style="text-align:left"><b>Source [IP] (Layer 3):</b> This will show you the source and destination IPv4 Addresses; from the Network layer of the OSI model.</p>\n\n<details>\n <summary>See image</summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/d71eb4efc8d48a968a3e078045bd1511.png" alt="Wireshark - layer 3" />\n<br /></div>\n</details>\n<p></p><p><br />\n\n\n</p><p style="text-align:left"><b>Protocol (Layer 4):</b> This will show you details of the protocol used (UDP/TCP) and source and destination ports; from the Transport layer of the OSI model.</p>\n\n<details>\n <summary>See image</summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/c373f8492470524a8f01fded43856a27.png" alt="Wireshark - layer 4" />\n<br /></div>\n</details>\n<p></p><p><br />\n\n</p><p style="text-align:left"><b>Protocol Errors:</b> This continuation of the 4th layer shows specific segments from TCP that needed to be reassembled.</p>\n\n\n<details>\n <summary>See image</summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/23bbe6ae6e8168cd0662998ff444b067.png" alt="Wireshark - protocol error" />\n<br /></div>\n</details>\n<p></p><p><br />\n\n</p><p style="text-align:left"><b>Application Protocol (Layer 5):</b> This will show details specific to the protocol used, such as HTTP, FTP,\xa0 and SMB. From the Application layer of the OSI model.</p>\n\n\n<details>\n <summary>See image</summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/879aea2816018d27769fc8490e4af51b.png" alt="Wireshark - layer 5" />\n<br /></div>\n</details>\n<p></p><p><br />\n\n</p><p style="text-align:left"><b>Application Data:</b>\xa0This extension of the 5th layer can show the application-specific data.</p>\n\n\n<details>\n <summary>See image</summary>\n<div style="text-align:center">\n<img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/c2d9c3ce498c6f9044413b68df287c14.png" alt="Wireshark - application data" />\n<br /></div>\n</details>\n<p></p>\n<p style="text-align:left"><br /></p><p style="text-align:justify">Now that we understand what a general packet is composed of, let\'s look at various application protocols and their specific details.</p><p></p>', 'taskType': 'none', 'taskNo': 3, 'taskCreated': '2020-10-15T00:07:29.926Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<span style="font-size:18px;font-weight:700">Use the "Exercise.pcapng" file to answer the questions.</span><b><br /><br />View packet number 38. </b>Which markup language is used under the HTTP protocol?', 'hint': 'Packet numbers are shown in the left column at the packet list pane.'}, {'questionNo': 2, 'question': '<p>What is the arrival date of the packet? (Answer format: Month/Day/Year)</p>', 'hint': 'The packet details pane and frame section can help.'}, {'questionNo': 3, 'question': '<p>What is the TTL value?</p>', 'hint': 'The packet details pane and IP protocol section can help.'}, {'questionNo': 4, 'question': '<p>What is the TCP payload size?</p>', 'hint': 'The packet details pane and protocol section can help.'}, {'questionNo': 5, 'question': '<p>What is the e-tag value?</p>', 'hint': ''}]}, {'taskTitle': 'Packet Navigation', 'taskDesc': '<p style="text-align:left"><b><span style="font-size:24px">Packet Numbers</span></b></p><p style="text-align:justify">Wireshark calculates the number of investigated packets and assigns a unique number for each packet. This helps the analysis process for big captures and makes it easy to go back to a specific point of an event.\xa0</p><p style="text-align:center"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/d52507e87088deb1597042d50900eef0.png" alt="Wireshark - packet numbers" /></p><p><span style="font-weight:bolder"><span style="font-size:24px">Go to Packet</span></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">Packet numbers do not only help to count the total number of packets or make it easier to find/investigate specific packets. This feature not only navigates between packets up and down; it also provides in-frame packet tracking and finds the next packet in the particular part of the conversation. You can use the\xa0</span><strong>"Go"</strong><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">\xa0menu and toolbar to view specific packets.</span><br /></p><p style="text-align:center"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/cdb1e1d12c63fc831c7d94db634bbe0d.png" alt="Wireshark - go to packet" /><br /></p>\n<br />\n<p><span style="font-weight:bolder"><span style="font-size:24px">Find Packets</span></span></p><p style="text-align:justify">Apart from packet number, Wireshark can find packets by packet content. You can use the <b>"Edit --&gt; Find Packet"</b> menu to make a search inside the packets for a particular event of interest. This helps analysts and administrators to find specific intrusion patterns or failure traces.</p><p style="text-align:justify">There are two crucial points in finding packets. The first is knowing the input type. This functionality accepts four types of inputs (Display filter, Hex, String and Regex). String and regex searches are the most commonly used search types. Searches are case insensitive, but you can set the case sensitivity in your search by clicking the radio button. </p><p style="text-align:justify">The second point is choosing the search field. You can conduct searches in the three panes (packet list, packet details, and packet bytes), and it is important to know the available information in each pane to find the event of interest. For example, if you try to find the information available in the packet details pane and conduct the search in the packet list pane, Wireshark won\'t find it even if it exists.<br /></p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/c8811df8ea0fa2b70fa90831d1ec9278.png" alt="Wireshark - find packets" /><br /></p>\n<br />\n<p><span style="font-weight:bolder"><span style="font-size:24px">Mark Packets</span></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"></span></p><p style="text-align:justify">Marking packets is another helpful functionality for analysts. You can find/point to a specific packet for further investigation by marking it. It helps analysts point to an event of interest or export particular packets from the capture.\xa0<span style="font-size:1rem">You can use the </span><span style="font-size:1rem;font-weight:bolder">"Edit" </span><span style="font-size:1rem">or\xa0</span><span style="font-size:1rem">the "right-click"</span><span style="font-size:1rem">\xa0</span><span style="font-size:1rem">menu to mark/unmark packets.</span></p><p style="text-align:justify">Marked packets will be shown in black regardless of the original colour representing the connection type. Note that marked packet information is renewed every file session, so marked packets will be lost after closing the capture file.\xa0</p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/2c290f2f3c7b07223c86cd066751d19b.png" alt="Wireshark - mark packets" /><br /></p>\n<br />\n<p><span style="font-weight:bolder"><span style="font-size:24px">Packet Comments</span></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"></span></p><p style="text-align:justify">Similar to packet marking, commenting is another helpful feature for analysts. You can add comments for particular packets that will help the further investigation or remind and point out important/suspicious points for other layer analysts. Unlike packet marking, the comments can stay within the capture file until the operator removes them.</p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/844bedc49bdd7dcaf26861a9cd2658fd.png" alt="Wireshark - packet comments" /><br /></p>\n<br />\n<p><span style="font-weight:bolder"><span style="font-size:24px">Export Packets</span></span></p><p style="text-align:justify">Capture files can contain thousands of packets in a single file. As mentioned earlier, Wireshark is not an IDS, so sometimes, it is necessary to separate specific packages from the file and dig deeper to resolve an incident.\xa0<span style="text-align:left">This functionality helps analysts share the only suspicious packages (decided scope).\xa0Thus redundant information is not included in the analysis process. You can use the <b>"File"</b> menu to export packets.</span><br /></p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/86daa70b6cb8b93cb11535787222fb26.png" alt="Wireshark - export packets" /><br /></p>\n<br />\n<p><span style="font-weight:bolder"><span style="font-size:24px">Export Objects (Files)</span></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"></span></p><p style="text-align:justify">Wireshark can extract files transferred through the wire. For a security analyst, it is vital to discover shared files and save them for further investigation. Exporting objects are available only for selected protocol\'s streams (DICOM, HTTP, IMF, SMB and TFTP).</p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/16c22447c36bff2e415ea75a764854c8.png" alt="Wireshark - export objects" /><br /></p>\n<br />\n<p><span style="font-weight:bolder"><span style="font-size:24px">Time Display Format</span></span></p><p style="text-align:justify">Wireshark lists the packets as they are captured, so investigating the default flow is not always the best option. By default, Wireshark shows the time in "Seconds Since Beginning of Capture", the common usage is using the UTC Time Display Format for a better view. You can use the\xa0<span style="font-weight:bolder">"View --&gt; Time Display Format"</span>\xa0menu to change the time display format.</p><p style="text-align:center"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/53bb9769af677eede39a3ec9e1b368a3.png" /><br /></p><p style="text-align:center"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/d2333318ff4df99df252c6ee1c236619.png" alt="Wireshark - time display format" /><br /></p>\n<br />\n<p><span style="font-size:24px;font-weight:bolder">Expert Info</span><br /></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"></span></p><p style="text-align:justify">Wireshark also detects specific states of protocols to help analysts easily spot possible anomalies and problems. Note that these are only suggestions, and there is always a chance of having false positives/negatives. Expert info can provide a group of categories in three different severities. Details are shown in the table below.</p><table class="table table-bordered"><tbody><tr><td><b>Severity</b></td><td><b>Colour</b></td><td><b>Info</b></td></tr><tr><td style="text-align:center"><b>Chat</b></td><td style="color:white;background-color:blue"><b>Blue</b></td><td style="text-align:left">Information on usual workflow.<br /></td></tr><tr><td style="text-align:center"><b>Note</b></td><td style="background-color:cyan"><b>Cyan</b></td><td style="text-align:left">Notable events like application error codes.</td></tr><tr><td style="text-align:center"><b>Warn</b></td><td style="background-color:yellow"><b>Yellow</b></td><td style="text-align:left">Warnings like unusual error codes or problem statements.<br /></td></tr><tr><td style="text-align:center"><b>Error</b></td><td style="background-color:red"><b>Red</b></td><td style="text-align:left">Problems like malformed packets.</td></tr></tbody></table><p style="text-align:justify"></p><p></p>Frequently encountered information groups are listed in the table below. You can refer to Wireshark\'s official documentation for more information on the expert information entries.<p></p><p></p><table class="table table-bordered"><tbody><tr><td><b>Group</b></td><td><b>Info</b></td><td><b>Group</b></td><td><b>Info</b></td></tr><tr><td><b>Checksum</b></td><td>Checksum errors.</td><td><b>Deprecated</b></td><td>Deprecated protocol usage.</td></tr><tr><td><b>Comment</b></td><td>Packet comment detection.</td><td><b>Malformed</b></td><td>Malformed packet detection.</td></tr></tbody></table><p style="text-align:justify">You can use the <b>"lower left bottom section"</b> in the status bar or <b>"Analyse --&gt; Expert Information"</b> menu to view all available information entries via a dialogue box. It will show the packet number, summary, group protocol and total occurrence.</p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/31917b6f1e846d3383218cabf1c07caf.png" alt="Wireshark - expert info" /><br /></p>', 'taskType': 'none', 'taskNo': 4, 'taskCreated': '2020-10-08T13:25:18.997Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<div><span style="font-size:18px;font-weight:700">Use the "Exercise.pcapng" file to answer the questions.</span><br /></div><div><span style="font-size:1rem"><br />Search the <b>"r4w" string</b> in packet details. What is the name of artist 1?</span><br /></div>', 'hint': ''}, {'questionNo': 2, 'question': '<p><b>Go to packet 12</b> and read the comments. What is the answer?<br /></p>', 'hint': 'Use the "Right-click --> Packet Comment" menu to view the comments. If the comment is long, you can scroll down to follow the rest of the paragraph. Remember, you can also use the "Statistics --> Capture File Properties" to view the available comments. '}, {'questionNo': 3, 'question': '<p>There is a <b>".txt"</b> file inside the capture file. Find the file and read it; what is the alien\'s name?<br /></p>', 'hint': ''}, {'questionNo': 4, 'question': '<p>Look at the expert info section. What is the number of warnings?</p>', 'hint': ''}]}, {'taskTitle': 'Packet Filtering', 'taskDesc': '<div><p><span style="font-size:16px">\ufeff</span><span style="font-size:18px">\ufeff</span><span style="font-size:24px;font-weight:bolder">Packet Filtering</span><br /></p><p style="text-align:justify">Wireshark has a powerful filter engine that helps analysts to narrow down the traffic and focus on the event of interest. Wireshark has two types of filtering approaches: capture and display filters. Capture filters are used for\xa0<b>"capturing"</b> only the packets valid for the used filter. Display filters are used for\xa0<b>"viewing"</b> the packets valid for the used filter. We will discuss these filters\' differences and advanced usage in the next room. Now let\'s focus on basic usage of the display filters, which will help analysts in the first place.</p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">Filters are specific queries designed for protocols available in Wireshark\'s official protocol reference. While the filters are only the option to investigate the event of interest, there are two different ways to filter traffic and remove the noise from the capture file. The first one uses queries, and the second uses the right-click menu. Wireshark provides a powerful GUI, and <u>there is a golden rule for analysts who don\'t want to write queries for basic tasks:</u>\xa0</span><strong>"If you can click on it, you can filter and copy it"</strong><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">.<br /><br /></span></p>\n\n<p><span style="font-weight:bolder"><span style="font-size:24px">Apply as Filter</span></span></p><p style="text-align:justify"></p><p style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"></p><p></p><p style="text-align:justify;color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt"><span style="background:transparent;margin-top:0pt;margin-bottom:0pt">This is the most basic way of filtering traffic. While investigating a capture file, you can click on the field you want to filter and use the\xa0</span><span style="font-size:1rem">"right-click menu" or\xa0</span><span style="background:transparent;font-size:1rem;margin-top:0pt;margin-bottom:0pt"><b>"Analyse</b></span><strong>\xa0--&gt; Apply as Filter"</strong><span style="background:transparent;font-size:1rem;margin-top:0pt;margin-bottom:0pt">\xa0menu to filter the specific value. Once you apply the filter, Wireshark will generate the required filter query, apply it, show the packets according to your choice, and hide the unselected packets from the packet list pane. Note that the number of total and displayed packets are always shown on the status bar.</span></p></div><div><br /></div><div><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/463abd0a5cad55831b54a37c17092505.png" alt="Wireshark - apply as filter" /><br /></div><div><br /></div><div><br /></div><div><p><span style="font-weight:bolder"><span style="font-size:24px">Conversation filter\xa0</span></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">When you use the "Apply as a Filter" option, you will filter only a single entity of the packet. This option is a good way of investigating a particular value in packets. However, suppose you want to investigate a specific packet number and all linked packets by focusing on IP addresses and port numbers. In that case, the "Conversation Filter" option helps you view only the related packets and hide the rest of the packets easily. You can use the"right-click menu" or "</span><strong>Analyse --&gt; Conversation Filter</strong><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">" menu to filter conversations.</span><br /></p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/6b31a8581e560286aee74fb9a608dfc9.png" alt="Wireshark - conversation filter" /><br /></p><p style="text-align:justify"><br /></p><p><span style="font-weight:bolder"><span style="font-size:24px">Colourise Conversation</span></span></p><p style="text-align:justify">This option is similar to the "Conversation Filter" with one difference. It highlights the linked packets without applying a display filter and decreasing the number of viewed packets. This option works with the "Colouring Rules" option ad changes the packet colours without considering the previously applied colour rule. You can use the\xa0<span style="color:rgb(14, 16, 26);font-size:1rem">"right-click menu" or</span><span style="color:rgb(14, 16, 26);font-size:1rem">\xa0</span><b style="color:rgb(14, 16, 26);font-size:1rem">"View --&gt; Colourise Conversation"</b><span style="color:rgb(14, 16, 26);font-size:1rem"> menu to colourise a linked packet in a single click. Note that you can use the\xa0</span><span style="font-size:1rem;font-weight:bolder;color:rgb(14, 16, 26)">"View --&gt; Colourise Conversation --&gt; Reset Colourisation"</span><span style="font-size:1rem;color:rgb(14, 16, 26)">\xa0menu </span><span style="color:rgb(14, 16, 26);font-size:1rem">to undo this operation.</span></p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/b7a7ce6afa9c421e6bfaebac719d348c.png" alt="Wireshark - colourise conversation" /><br /></p></div><div><br /></div>\n<p></p>\n<div><p><span style="font-weight:bolder"><span style="font-size:24px">Prepare as Filter\xa0</span></span></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">Similar to "Apply as Filter", this option helps analysts create display filters using the "right-click" menu. However, unlike the previous one, this model doesn\'t apply the filters after the choice. It adds the required query to the pane and waits for the execution command (enter) or another chosen filtering option by using the\xa0</span><strong>".. and/or.."</strong><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">\xa0from the "right-click menu".</span><br /></p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/0291e6095277eaebf8f9a8f8df0f1ec6.png" alt="Wireshark - prepare as filter" /><br /></p><p>\n</p><p></p>\n</div><div><span style="font-size:24px;font-weight:bolder"><br />Apply as Column</span><br /></div><div><p></p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">By default, the packet list pane provides basic information about each packet.\xa0</span><span style="background:transparent;color:rgb(14, 16, 26);font-size:1rem;margin-top:0pt;margin-bottom:0pt">You can use the\xa0</span><span style="color:rgb(14, 16, 26);font-size:1rem">"right-click menu"</span><span style="background:transparent;font-size:1rem;color:rgb(14, 16, 26);margin-top:0pt;margin-bottom:0pt">\xa0or\xa0</span><span style="background:transparent;font-size:1rem;color:rgb(14, 16, 26);font-weight:bolder;margin-top:0pt;margin-bottom:0pt">"Analyse\xa0<strong><span style="background:transparent;margin-top:0pt;margin-bottom:0pt">--&gt;\xa0</span></strong>\xa0Apply as Column"</span><span style="background:transparent;font-size:1rem;color:rgb(14, 16, 26);margin-top:0pt;margin-bottom:0pt">\xa0menu to add columns to the packet list pane.\xa0</span><span style="background-color:transparent;font-size:1rem;color:rgb(14, 16, 26)">Once you click on a value and apply it as a column, it will be visible on the packet list pane. This function helps analysts examine the appearance of a specific value/field across the available packets in the capture file. You can enable/disable the columns shown in the packet list pane by clicking on the top of the packet list pane.</span></p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/8eac68abb9c10fccce114f6ad803a5dd.png" alt="Wireshark - apply as column" /><br /></p>\n<p></p>\n<p><span style="font-size:24px;font-weight:bolder"><br />Follow Stream</span><br /></p><p style="text-align:justify">Wireshark displays everything in packet portion size. However, it is possible to reconstruct the streams and view the raw traffic as it is presented at the application level. Following the protocol, streams help analysts recreate the application-level data and understand the event of interest. It is also possible to view the unencrypted protocol data like usernames, passwords and other transferred data. </p><p style="text-align:justify"><span style="color:rgb(14, 16, 26);background:transparent;margin-top:0pt;margin-bottom:0pt">You can use the</span><span style="color:rgb(14, 16, 26);font-size:1rem">"right-click menu" or\xa0</span><span style="background:transparent;font-size:1rem;color:rgb(14, 16, 26);margin-top:0pt;margin-bottom:0pt">\xa0</span><strong>"Analyse</strong><strong>\xa0--&gt; Follow TCP/UDP/HTTP Stream"</strong><span style="background:transparent;font-size:1rem;color:rgb(14, 16, 26);margin-top:0pt;margin-bottom:0pt">\xa0menu to follow traffic streams. Streams are shown in a separate dialogue box; packets originating from the server are highlighted with blue, and those originating from the client are highlighted with red.</span></p><p style="text-align:justify"><img src="https://tryhackme-images.s3.amazonaws.com/user-uploads/6131132af49360005df01ae3/room-content/d578e89a1f4a526fb8ede6fdf1a5f1b5.png" alt="Wireshark - follow stream" style="font-size:1rem" /></p><p style="text-align:justify">Once you follow a stream, Wireshark automatically creates and applies the required filter to view the specific stream. Remember, once a filter is applied, the number of the viewed packets will change. You will need to use the "<b>X</b>\xa0<b>button</b>" located on the right upper side of the display filter bar to remove the display filter and view all available packets in the capture file.\xa0</p></div>', 'taskType': 'none', 'taskNo': 5, 'taskCreated': '2022-05-12T23:49:41.290Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<div><span style="font-size:18px;font-weight:700">Use the "Exercise.pcapng" file to answer the questions.</span><br /></div><div><span style="font-size:1rem"><b><br /></b></span></div><div><span style="font-size:1rem"><b>Go to packet number 4. </b>Right-click on the "Hypertext Transfer Protocol" and apply it as a filter. Now, look at the filter pane. What is the filter query?</span><br /></div>', 'hint': ''}, {'questionNo': 2, 'question': '<p>What is the number of displayed packets?</p>', 'hint': ''}, {'questionNo': 3, 'question': '<p><b>Go to packet number 33790</b> and follow the stream. What is the total number of artists?</p>', 'hint': ''}, {'questionNo': 4, 'question': '<p>What is the name of the second artist?</p>', 'hint': ''}]}, {'taskTitle': 'Conclusion', 'taskDesc': '<p><span style="font-size:1rem;font-weight:bolder">Congratulations!\xa0</span><span style="font-size:1rem">You just finished the "Wireshark: The Basics" room.\xa0</span><span style="font-size:1rem">In this room, we covered Wireshark, what it is, how it operates, and how to use it to investigate traffic captures. </span></p><p>Want to learn more? We invite you to complete the <b><a href="https://tryhackme.com/jr/wiresharkpacketoperations" target="_blank">Wireshark: Packet Operations</a></b>\xa0room<span style="font-size:1rem">\xa0</span><span style="font-size:1rem">to improve your Wireshark skills by investigating packets in-depth.\xa0</span></p>', 'taskType': 'none', 'taskNo': 6, 'taskCreated': '2020-10-17T04:11:11.457Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Proceed to the next room and keep learning!', 'hint': ''}]}]}