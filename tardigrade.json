{'image': 'https://tryhackme-images.s3.amazonaws.com/room-icons/5a8e7a7a02d75283f411004a07e7bfc6.png', 'title': 'Tardigrade', 'description': 'Can you find all the basic persistence mechanisms in this Linux endpoint?', 'code': 'tardigrade', 'users': 2070, 'tags': ['Linux', 'Persistence', 'Forensics', 'Blue Team', 'guided-challenge'], 'type': 'walkthrough', 'difficulty': 'medium', 'userCompleted': False, 'upVotes': 179, 'created': '2022-04-11T22:44:03.778Z', 'published': '2023-02-24T19:00:00.151Z', 'freeToUse': True, 'businessOnly': False, 'headerImage': 'https://tryhackme-images.s3.amazonaws.com/user-uploads/60c1834f577d63004fdaec50/room-content/a255bca5c673fd86e8302d36ab4ca23e.png', 'creator': 'Mokmokmok', 'tasks': [{'taskTitle': 'Connect to the machine via SSH', 'taskDesc': '<p>A server has been compromised, and the security team has decided to isolate the machine until it\'s been thoroughly cleaned up. Initial checks by the Incident Response team revealed that there are five different backdoors. It\'s your job to find and remediate them before giving the signal to bring the server back to production.</p><p><span style="caret-color:rgb(0, 0, 0);color:rgb(0, 0, 0)">First, let\'s start the Virtual Machine by pressing the Start Machine button at the top of this task. You may access the VM using the AttackBox or your VPN connection.</span><br /></p><p>To start our investigation, we need to connect to the server. The IR team has provided the credentials for use below and noted that the user has root privileges to the server. I<span style="font-size:1rem">\'ll help guide you along at first, but as we progress through each step, I\'m sure you\'ll feel more comfortable solving these on your own.</span></p><p>user: giorgio</p><p>password: armani</p>', 'taskType': 'vm', 'taskNo': 1, 'taskCreated': '2022-04-13T14:41:21.228Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '62572710aa2cd80048461399', 'questions': [{'questionNo': 1, 'question': "What is the server's OS version?", 'hint': ''}]}, {'taskTitle': 'Investigating the giorgio account', 'taskDesc': "Since we're in the giorgio account already, we might as well have a look around.", 'taskType': 'none', 'taskNo': 2, 'taskCreated': '2022-04-13T15:26:23.491Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<p><span style="font-size:1rem">What\'s the most interesting file you found in giorgio\'s home directory?</span><br /></p>', 'hint': "Using the ls command on giorgio's home directory doesn't seem to return anything, so maybe we can find something interesting in the hidden files?"}, {'questionNo': 2, 'question': '<p>In every investigation, it\'s important to keep a dirty wordlist to keep track of all your findings, no matter how small. It\'s also a way to prevent going back in circles and starting from scratch again.\xa0<span style="font-size:1rem">As such, now\'s a good time to create one and put the previous answer as an entry so we can go back to it later.</span></p><p>Another file that can be found in every user\'s home directory is the .bashrc file.\xa0<span style="font-size:1rem">Can you check if you can find something interesting in giorgio\'s .bashrc?</span></p>', 'hint': 'alias is a command that allows a string to be interpreted using a shorter, usually easier-to-remember "alias" for the string.\nMaybe there\'s a suspicious usage of alias somewhere?'}, {'questionNo': 3, 'question': "<p>It seems we've covered the usual bases in giorgio's home directory, so it's time to check the scheduled tasks that he owns.</p><p>Did you find anything interesting about scheduled tasks?</p>", 'hint': "cron is a great way to automate recurring tasks.\nMaybe there's a suspicious usage of cron?"}]}, {'taskTitle': 'Dirty Wordlist Revisited', 'taskDesc': '<p>In the previous task, the concept of a dirty wordlist was introduced. In this task, we will discuss it in more detail.</p><p> </p><p>A dirty wordlist is essentially raw documentation of the investigation from the investigator\'s perspective. It may contain everything that would help lead the investigation forward, from actual IOCs to random notes. Keeping a dirty wordlist assures the investigator that a specific IOC has already been recorded, helping keep the investigation on track and preventing getting stuck in a closed loop of used leads.\xa0</p><p>It also helps the investigator remember the mindset that they had during the course of the investigation. The importance of taking note of one\'s mindset during different points of an investigation is usually given less importance in favour of focusing on the more exciting atomic indicators; however, recording it provides further context on why a specific bit is recorded in the first place. This is how pivot points are decided and further leads, born and pursued.</p><p>The advantages of a dirty wordlist don\'t end here. A quick way to formally document findings at the end of the investigation is to clean them up. It is recommended to put in every sort of detail that may help during the course of the investigation. So, in the end, it would be easy to remove all the unneeded details and false leads, enrich actual IOCs, and establish points of emphasis.\xa0<span style="font-size:1rem">The flag for this task is: THM{d1rty_w0rdl1st}</span></p>', 'taskType': 'none', 'taskNo': 3, 'taskCreated': '2022-09-28T23:43:40.875Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<p>This section is a bonus discussion on the importance of a dirty wordlist.\xa0<span style="font-size:1rem">Accept the extra point and happy hunting!</span></p><p><span style="font-size:1rem">What is the flag?</span></p>', 'hint': ''}]}, {'taskTitle': 'Investigating the root account', 'taskDesc': "Normal user accounts aren't the only place to leave persistence mechanisms. As such, we will then go ahead and investigate the root account.\xa0", 'taskType': 'none', 'taskNo': 4, 'taskCreated': '2022-04-13T17:45:27.341Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<p>A few moments after logging on to the root account, you find an error message in your terminal.</p><p>What does it say?</p>', 'hint': 'Come on, do you really need a hint?'}, {'questionNo': 2, 'question': '<p>After moving forward with the error message, a suspicious command appears in the terminal as part of the error message.</p><p>What command was displayed?</p>', 'hint': ''}, {'questionNo': 3, 'question': '<p>You might wonder, "how did that happen? I didn\'t even do anything? I just logged as root, and it happened."</p><p>Can you find out how the suspicious command has been implemented?</p>', 'hint': 'This file is essentially a file that executes whenever a user logs on, but more importantly, it executes whenever bash is started.'}]}, {'taskTitle': 'Investigating the system', 'taskDesc': 'After checking the giorgio and the root accounts, it\'s essentially a free-for-all from here on, as finding more suspicious items depends on how well you know what\'s "normal" in the system.', 'taskType': 'none', 'taskNo': 5, 'taskCreated': '2022-04-13T18:18:22.861Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<p>There\'s one more persistence mechanism in the system.</p><p>A good way to systematically dissect the system is to look for "usuals" and "unusuals". For example, you can check for commonly abused or unusual files and directories.</p><p>This specific persistence mechanism is directly tied to <i>something </i>(or someone?) already present in fresh Linux installs and may be abused and/or manipulated to fit an adversary\'s goals. What\'s its name?</p><p>What is the last persistence mechanism?</p>', 'hint': "It's a usual user with an unusual characteristic"}]}, {'taskTitle': 'Final Thoughts', 'taskDesc': '<p>Now that you\'ve found the final persistence mechanism, it\'s time to clean up. The persistence mechanisms tackled in this room are common and straightforward; as such, the process of eradicating them is simple.</p><p>The first four persistence mechanisms can be remediated by simply removing the mechanism (e.g. delete the file, remove the commands). The last one, however, involves bringing back the "unusuals" to their "usual"\xa0<span style="font-size:1rem">state, which is a bit more complex as you intend for that particular user, file or process to function as before.</span></p>', 'taskType': 'none', 'taskNo': 6, 'taskCreated': '2022-04-13T18:43:29.453Z', 'taskDeadline': None, 'tasksInfo': [], 'uploadId': '', 'questions': [{'questionNo': 1, 'question': '<p>Finally, as you\'ve already found the final persistence mechanism, there\'s value in going all the way through to the end.</p><p>The adversary left a golden nugget of "advise" somewhere.</p><p>What is the nugget?</p>', 'hint': 'These hackers seem to like playing "hide the nugget"...\n\nMake sure to double check your working directory!'}]}]}